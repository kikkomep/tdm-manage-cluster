diff --git a/contrib/terraform/openstack/README.md b/contrib/terraform/openstack/README.md
index bd619b99..6a903f57 100644
--- a/contrib/terraform/openstack/README.md
+++ b/contrib/terraform/openstack/README.md
@@ -243,6 +243,8 @@ For your cluster, edit `inventory/$CLUSTER/cluster.tf`.
 |`supplementary_node_groups` | To add ansible groups to the nodes, such as `kube-ingress` for running ingress controller pods, empty by default. |
 |`bastion_allowed_remote_ips` | List of CIDR allowed to initiate a SSH connection, `["0.0.0.0/0"]` by default |
 |`worker_allowed_ports` | List of ports to open on worker nodes, `[{ "protocol" = "tcp", "port_range_min" = 30000, "port_range_max" = 32767, "remote_ip_prefix" = "0.0.0.0/0"}]` by default |
+| `master_vm_scheduler_policy` | Scheduler policy to apply to k8s master nodes (`"soft-anti-affinity"` by default) |
+| `node_vm_scheduler_policy` | Scheduler policy to apply to k8s workder nodes (`"soft-anti-affinity"` by default) |
 
 #### Terraform state files
 
diff --git a/contrib/terraform/openstack/kubespray.tf b/contrib/terraform/openstack/kubespray.tf
index 8ee77f53..0e98f410 100644
--- a/contrib/terraform/openstack/kubespray.tf
+++ b/contrib/terraform/openstack/kubespray.tf
@@ -28,6 +28,7 @@ module "compute" {
   cluster_name                                 = "${var.cluster_name}"
   az_list                                      = "${var.az_list}"
   number_of_k8s_masters                        = "${var.number_of_k8s_masters}"
+  number_of_k8s_masters_ext_net                = "${var.number_of_k8s_masters_ext_net}"
   number_of_k8s_masters_no_etcd                = "${var.number_of_k8s_masters_no_etcd}"
   number_of_etcd                               = "${var.number_of_etcd}"
   number_of_k8s_masters_no_floating_ip         = "${var.number_of_k8s_masters_no_floating_ip}"
@@ -35,6 +36,8 @@ module "compute" {
   number_of_k8s_nodes                          = "${var.number_of_k8s_nodes}"
   number_of_bastions                           = "${var.number_of_bastions}"
   number_of_k8s_nodes_no_floating_ip           = "${var.number_of_k8s_nodes_no_floating_ip}"
+  number_of_k8s_nodes_ext_net                  = "${var.number_of_k8s_nodes_ext_net}",
+  number_of_k8s_data_nodes_ext_net             = "${var.number_of_k8s_data_nodes_ext_net}",
   number_of_gfs_nodes_no_floating_ip           = "${var.number_of_gfs_nodes_no_floating_ip}"
   gfs_volume_size_in_gb                        = "${var.gfs_volume_size_in_gb}"
   public_key_path                              = "${var.public_key_path}"
@@ -44,9 +47,11 @@ module "compute" {
   ssh_user_gfs                                 = "${var.ssh_user_gfs}"
   flavor_k8s_master                            = "${var.flavor_k8s_master}"
   flavor_k8s_node                              = "${var.flavor_k8s_node}"
+  flavor_k8s_data_node                         = "${var.flavor_k8s_data_node}"
   flavor_etcd                                  = "${var.flavor_etcd}"
   flavor_gfs_node                              = "${var.flavor_gfs_node}"
   network_name                                 = "${var.network_name}"
+  external_net                                 = "${var.external_net}"
   flavor_bastion                               = "${var.flavor_bastion}"
   k8s_master_fips                              = "${module.ips.k8s_master_fips}"
   k8s_node_fips                                = "${module.ips.k8s_node_fips}"
@@ -72,11 +77,11 @@ output "router_id" {
 }
 
 output "k8s_master_fips" {
-  value = "${module.ips.k8s_master_fips}"
+  value = ["${module.compute.k8s_master_ext_net_ips}", "${module.ips.k8s_master_fips}"]
 }
 
 output "k8s_node_fips" {
-  value = "${module.ips.k8s_node_fips}"
+  value = ["${module.compute.k8s_node_ext_net_ips}", "${module.ips.k8s_node_fips}"]
 }
 
 output "bastion_fips" {
diff --git a/contrib/terraform/openstack/modules/compute/config_network_interfaces.sh b/contrib/terraform/openstack/modules/compute/config_network_interfaces.sh
new file mode 100755
index 00000000..586ae57b
--- /dev/null
+++ b/contrib/terraform/openstack/modules/compute/config_network_interfaces.sh
@@ -0,0 +1,103 @@
+#!/bin/bash
+
+# Collect name of network interfaces
+all_interfaces=$(ifconfig -a | sed 's/[: \t].*//;/^\(lo\|\)$/d')
+# Collect name of network interfaces
+#active_interfaces=($(ifconfig | sed 's/[: \t].*//;/^\(lo\|\)$/d')) # not supported
+# Set the primary as the first active interface
+primary_interface=$(ifconfig | sed 's/[: \t].*//;/^\(lo\|\)$/d')
+echo "Primary interface: $primary_interface"
+# Detect secondary interface
+for i in $all_interfaces; do
+    if [[ "$i" != "$primary_interface"  ]]; then
+        echo "Secondary interface: $i"
+        secondary_interface="$i"
+        break
+    fi
+done
+
+# Check if network interfaces have been detected
+if [[ -z "$primary_interface" || -z "$secondary_interface" ]]; then
+    echo "Couldn't retrieve network interfaces" >&2
+    echo "Primary interface: $primary_interface; Public gateway: $secondary_interface" >&2
+    exit 1
+fi
+
+# detect Linux Distribution
+distro_name=$(cat /etc/*-release | awk -F= '/\<NAME=/ { gsub("\"", "", $0); print tolower($2); }')
+distro_version_id=$(cat /etc/*-release | awk -F= '/\<VERSION_ID=/ { gsub("\"", "", $0); print $2; }')
+# Ubuntu Distribution
+if [[ $distro_name =~ "ubuntu" && $distro_version_id == "16.04" ]]; then
+    # Add external interface
+    echo -e "auto $secondary_interface\niface $secondary_interface inet dhcp" > /etc/network/interfaces.d/ext-net.cfg
+    #
+    cat >> /etc/network/if-up.d/999-ens4-route-up <<END
+#!/bin/bash
+if [[ "\$IFACE" == ens4 ]]; then
+    echo "######## Hi!! I'm ens4-route-up #######"
+    echo "Current routing table"
+    route -n
+    echo "Trying to remove default route through ens4, if it exists"
+    route -4 del -net 0.0.0.0 netmask 0.0.0.0 dev \$IFACE || true
+    echo "Modified routing table"
+    route -n
+fi
+END
+    chmod 755 /etc/network/if-up.d/999-ens4-route-up
+    # restart network to apply changes
+    systemctl restart networking
+
+elif [[ $distro_name =~ "ubuntu" && $distro_version_id == "18.04" ]]; then
+    # detect mac address
+    mac_address=$(cat /sys/class/net/$secondary_interface/address)
+    # Add external interface
+    sed -i -e "/\<$primary_interface:/a\            critical: true" /etc/netplan/50-cloud-init.yaml
+    cat >> /etc/netplan/50-cloud-init.yaml <<END
+        $secondary_interface:
+            critical: true
+            dhcp4: true
+            match:
+                macaddress: $mac_address
+            set-name: $secondary_interface
+END
+    cat >> /etc/networkd-dispatcher/routable.d/999-ens4-route-up <<END
+#!/bin/bash
+if [[ "\$IFACE" == ens4 ]]; then
+    echo "######## Hi!! I'm ens4-route-up #######"
+    echo "Current routing table"
+    route -n
+    echo "Trying to remove default route through ens4, if it exists"
+    route -4 del -net 0.0.0.0 netmask 0.0.0.0 dev \$IFACE || true
+    echo "Modified routing table"
+    route -n
+fi
+END
+    chmod 755 /etc/networkd-dispatcher/routable.d/999-ens4-route-up
+    # restart network to apply changes
+    netplan apply
+
+elif [[ $distro_name =~ "centos" ]]; then
+    # use eth0 configuration file as template for the eth1 interface
+    cp /etc/sysconfig/network-scripts/ifcfg-eth{0,1}
+    # detect mac address
+    mac_address=$(cat /sys/class/net/eth1/address)
+    # edit eth1 configuration file
+    sed -i "s/HWADDR=.*/HWADDR=$mac_address/;s/eth0/eth1/" /etc/sysconfig/network-scripts/ifcfg-eth1
+    # set default gateway
+    echo "GATEWAYDEV=eth0" >> /etc/sysconfig/network
+    # restart network to apply changes
+    systemctl restart network
+fi
+
+# Primary interface info
+network_1_addr=$(ip -o -4 a | awk "/\<$primary_interface\>/{print \$4}")
+network_1_ip=$(cut -d'/' -f1 <<<"$network_1_addr")
+network_1_cl=$(cut -d'/' -f2 <<<"$network_1_addr")
+
+echo -e "Primary interface info:"
+echo -e "- address: $network_1_addr"
+echo -e "- class: $network_1_cl"
+echo -e "- ip: $network_1_ip"
+
+# Set advertise address of Kubernetes Master
+API_ADVERTISE_ADDRESSES="$network_1_ip"
diff --git a/contrib/terraform/openstack/modules/compute/main.tf b/contrib/terraform/openstack/modules/compute/main.tf
index 72c0bea8..11df69be 100644
--- a/contrib/terraform/openstack/modules/compute/main.tf
+++ b/contrib/terraform/openstack/modules/compute/main.tf
@@ -62,6 +62,22 @@ resource "openstack_networking_secgroup_rule_v2" "worker" {
   security_group_id = "${openstack_networking_secgroup_v2.worker.id}"
 }
 
+resource "openstack_compute_servergroup_v2" "master_sg" {
+  name     = "k8s_master_sg"
+  policies = [ "${var.master_vm_scheduler_policy}" ]
+}
+
+resource "openstack_compute_servergroup_v2" "node_sg" {
+  name     = "k8s_node_sg"
+  policies = [ "${var.node_vm_scheduler_policy}" ]
+}
+
+# Bootstrap
+data "template_file" "instance_with_ext_interface_bootstrap" {
+  template = "${file("${path.module}/config_network_interfaces.sh")}"
+}
+
+
 resource "openstack_compute_instance_v2" "bastion" {
   name       = "${var.cluster_name}-bastion-${count.index+1}"
   count      = "${var.number_of_bastions}"
@@ -85,9 +101,8 @@ resource "openstack_compute_instance_v2" "bastion" {
   }
 
   provisioner "local-exec" {
-    command = "sed s/USER/${var.ssh_user}/ contrib/terraform/openstack/ansible_bastion_template.txt | sed s/BASTION_ADDRESS/${var.bastion_fips[0]}/ > contrib/terraform/group_vars/no-floating.yml"
+    command = "sed s/USER/${var.ssh_user}/ ${KUBESPRAY_DIR}/contrib/terraform/openstack/ansible_bastion_template.txt | sed s/BASTION_ADDRESS/${var.bastion_fips[0]}/ > ${INVENTORY_DIR}/cluster/group_vars/no-floating.yml"
   }
-
 }
 
 resource "openstack_compute_instance_v2" "k8s_master" {
@@ -115,9 +130,43 @@ resource "openstack_compute_instance_v2" "k8s_master" {
   }
 
   provisioner "local-exec" {
-    command = "sed s/USER/${var.ssh_user}/ contrib/terraform/openstack/ansible_bastion_template.txt | sed s/BASTION_ADDRESS/${element( concat(var.bastion_fips, var.k8s_master_fips), 0)}/ > contrib/terraform/group_vars/no-floating.yml"
+    command = "sed s/USER/${var.ssh_user}/ ${KUBESPRAY_DIR}/contrib/terraform/openstack/ansible_bastion_template.txt | sed s/BASTION_ADDRESS/${element( concat(var.bastion_fips, var.k8s_master_fips), 0)}/ > ${INVENTORY_DIR}/cluster/group_vars/no-floating.yml"
   }
 
+  scheduler_hints {
+    group  = "${openstack_compute_servergroup_v2.master_sg.id}"
+  }
+}
+
+resource "openstack_compute_instance_v2" "k8s_master_ext_net" {
+  name       = "${var.cluster_name}-k8s-master-ext-net-${count.index+1}"
+  count      = "${var.number_of_k8s_masters_ext_net}"
+  availability_zone = "${element(var.az_list, count.index)}"
+  image_name = "${var.image}"
+  flavor_id  = "${var.flavor_k8s_master}"
+  key_pair   = "${openstack_compute_keypair_v2.k8s.name}"
+
+  network {
+    uuid = "${var.external_net}"
+  }
+
+  security_groups = ["${openstack_networking_secgroup_v2.k8s_master.name}",
+    "${openstack_networking_secgroup_v2.bastion.name}",
+    "${openstack_networking_secgroup_v2.k8s.name}",
+    "default",
+  ]
+
+  metadata = {
+    ssh_user         = "${var.ssh_user}"
+    kubespray_groups = "etcd,kube-master,${var.supplementary_master_groups},k8s-cluster,vault"
+    depends_on       = "${var.network_id}"
+  }
+
+  user_data       = "${data.template_file.instance_with_ext_interface_bootstrap.rendered}"
+
+  scheduler_hints {
+    group  = "${openstack_compute_servergroup_v2.master_sg.id}"
+  }
 }
 
 resource "openstack_compute_instance_v2" "k8s_master_no_etcd" {
@@ -144,9 +193,12 @@ resource "openstack_compute_instance_v2" "k8s_master_no_etcd" {
   }
 
   provisioner "local-exec" {
-    command = "sed s/USER/${var.ssh_user}/ contrib/terraform/openstack/ansible_bastion_template.txt | sed s/BASTION_ADDRESS/${element( concat(var.bastion_fips, var.k8s_master_fips), 0)}/ > contrib/terraform/group_vars/no-floating.yml"
+    command = "sed s/USER/${var.ssh_user}/ ${KUBESPRAY_DIR}/contrib/terraform/openstack/ansible_bastion_template.txt | sed s/BASTION_ADDRESS/${element( concat(var.bastion_fips, var.k8s_master_fips), 0)}/ > ${INVENTORY_DIR}/cluster/group_vars/no-floating.yml"
   }
 
+  scheduler_hints {
+    group  = "${openstack_compute_servergroup_v2.master_sg.id}"
+  }
 }
 
 resource "openstack_compute_instance_v2" "etcd" {
@@ -169,6 +221,13 @@ resource "openstack_compute_instance_v2" "etcd" {
     depends_on       = "${var.network_id}"
   }
 
+  scheduler_hints {
+    group  = "${openstack_compute_servergroup_v2.master_sg.id}"
+  }
+
+  scheduler_hints {
+    group  = "${openstack_compute_servergroup_v2.master_sg.id}"
+  }
 }
 
 resource "openstack_compute_instance_v2" "k8s_master_no_floating_ip" {
@@ -194,6 +253,9 @@ resource "openstack_compute_instance_v2" "k8s_master_no_floating_ip" {
     depends_on       = "${var.network_id}"
   }
 
+  scheduler_hints {
+    group  = "${openstack_compute_servergroup_v2.master_sg.id}"
+  }
 }
 
 resource "openstack_compute_instance_v2" "k8s_master_no_floating_ip_no_etcd" {
@@ -218,6 +280,9 @@ resource "openstack_compute_instance_v2" "k8s_master_no_floating_ip_no_etcd" {
     depends_on       = "${var.network_id}"
   }
 
+  scheduler_hints {
+    group  = "${openstack_compute_servergroup_v2.master_sg.id}"
+  }
 }
 
 resource "openstack_compute_instance_v2" "k8s_node" {
@@ -245,9 +310,12 @@ resource "openstack_compute_instance_v2" "k8s_node" {
   }
 
   provisioner "local-exec" {
-    command = "sed s/USER/${var.ssh_user}/ contrib/terraform/openstack/ansible_bastion_template.txt | sed s/BASTION_ADDRESS/${element( concat(var.bastion_fips, var.k8s_node_fips), 0)}/ > contrib/terraform/group_vars/no-floating.yml"
+    command = "sed s/USER/${var.ssh_user}/ ${KUBESPRAY_DIR}/contrib/terraform/openstack/ansible_bastion_template.txt | sed s/BASTION_ADDRESS/${element( concat(var.bastion_fips, var.k8s_node_fips), 0)}/ > ${INVENTORY_DIR}/cluster/group_vars/no-floating.yml"
   }
 
+  scheduler_hints {
+    group  = "${openstack_compute_servergroup_v2.node_sg.id}"
+  }
 }
 
 resource "openstack_compute_instance_v2" "k8s_node_no_floating_ip" {
@@ -273,8 +341,69 @@ resource "openstack_compute_instance_v2" "k8s_node_no_floating_ip" {
     depends_on       = "${var.network_id}"
   }
 
+  scheduler_hints {
+    group  = "${openstack_compute_servergroup_v2.node_sg.id}"
+  }
 }
 
+
+resource "openstack_compute_instance_v2" "k8s_node_ext_net" {
+  name       = "${var.cluster_name}-k8s-node-ext-net-${count.index+1}"
+  count      = "${var.number_of_k8s_nodes_ext_net}"
+  availability_zone = "${element(var.az_list, count.index)}"
+  image_name = "${var.image}"
+  flavor_id  = "${var.flavor_k8s_node}"
+  key_pair   = "${openstack_compute_keypair_v2.k8s.name}"
+
+  network {
+    uuid = "${var.external_net}"
+  }
+
+  security_groups = ["${openstack_networking_secgroup_v2.k8s.name}",
+    "${openstack_networking_secgroup_v2.worker.name}",
+    "default",
+  ]
+
+  metadata = {
+    ssh_user         = "${var.ssh_user}"
+    kubespray_groups = "kube-node,k8s-cluster,no-floating,${var.supplementary_node_groups}"
+    depends_on       = "${var.network_id}"
+  }
+
+  scheduler_hints {
+    group  = "${openstack_compute_servergroup_v2.node_sg.id}"
+  }
+}
+
+resource "openstack_compute_instance_v2" "k8s_data_node_ext_net" {
+  name       = "${var.cluster_name}-k8s-data-node-ext-net-${count.index+1}"
+  count      = "${var.number_of_k8s_data_nodes_ext_net}"
+  availability_zone = "${element(var.az_list, count.index)}"
+  image_name = "${var.image}"
+  flavor_id  = "${var.flavor_k8s_data_node}"
+  key_pair   = "${openstack_compute_keypair_v2.k8s.name}"
+
+  network {
+    uuid = "${var.external_net}"
+  }
+
+  security_groups = ["${openstack_networking_secgroup_v2.k8s.name}",
+    "${openstack_networking_secgroup_v2.worker.name}",
+    "default",
+  ]
+
+  metadata = {
+    ssh_user         = "${var.ssh_user}"
+    kubespray_groups = "kube-node,k8s-cluster,no-floating,k8s-data-node,${var.supplementary_node_groups}"
+    depends_on       = "${var.network_id}"
+  }
+
+  scheduler_hints {
+    group  = "${openstack_compute_servergroup_v2.node_sg.id}"
+  }
+}
+
+
 resource "openstack_compute_floatingip_associate_v2" "bastion" {
   count       = "${var.number_of_bastions}"
   floating_ip = "${var.bastion_fips[count.index]}"
diff --git a/contrib/terraform/openstack/modules/compute/outputs.tf b/contrib/terraform/openstack/modules/compute/outputs.tf
new file mode 100644
index 00000000..2c070b55
--- /dev/null
+++ b/contrib/terraform/openstack/modules/compute/outputs.tf
@@ -0,0 +1,7 @@
+output "k8s_master_ext_net_ips" {
+  value = ["${openstack_compute_instance_v2.k8s_master_ext_net.*.network.0.fixed_ip_v4}"]
+}
+
+output "k8s_node_ext_net_ips" {
+  value = ["${openstack_compute_instance_v2.k8s_node_ext_net.*.network.0.fixed_ip_v4}", "${openstack_compute_instance_v2.k8s_data_node_ext_net.*.network.0.fixed_ip_v4}"]
+}
diff --git a/contrib/terraform/openstack/modules/compute/variables.tf b/contrib/terraform/openstack/modules/compute/variables.tf
index 7c004fdc..7a56ef6d 100644
--- a/contrib/terraform/openstack/modules/compute/variables.tf
+++ b/contrib/terraform/openstack/modules/compute/variables.tf
@@ -6,10 +6,16 @@ variable "az_list" {
 
 variable "number_of_k8s_masters" {}
 
+variable "number_of_k8s_masters_ext_net" {}
+
 variable "number_of_k8s_masters_no_etcd" {}
 
 variable "number_of_etcd" {}
 
+variable "number_of_k8s_nodes_ext_net" {}
+
+variable "number_of_k8s_data_nodes_ext_net" {}
+
 variable "number_of_k8s_masters_no_floating_ip" {}
 
 variable "number_of_k8s_masters_no_floating_ip_no_etcd" {}
@@ -38,12 +44,16 @@ variable "flavor_k8s_master" {}
 
 variable "flavor_k8s_node" {}
 
+variable "flavor_k8s_data_node" {}
+
 variable "flavor_etcd" {}
 
 variable "flavor_gfs_node" {}
 
 variable "network_name" {}
 
+variable "external_net" {}
+
 variable "flavor_bastion" {}
 
 variable "network_id" {
@@ -77,3 +87,11 @@ variable "supplementary_node_groups" {
 variable "worker_allowed_ports" {
   type = "list"
 }
+
+variable "master_vm_scheduler_policy" {
+  default = "soft-anti-affinity"
+}
+
+variable "node_vm_scheduler_policy" {
+  default = "soft-anti-affinity"
+}
diff --git a/contrib/terraform/openstack/variables.tf b/contrib/terraform/openstack/variables.tf
index c3758cf9..0a8002d0 100644
--- a/contrib/terraform/openstack/variables.tf
+++ b/contrib/terraform/openstack/variables.tf
@@ -16,6 +16,10 @@ variable "number_of_k8s_masters" {
   default = 2
 }
 
+variable "number_of_k8s_masters_ext_net" {
+  default = 0
+}
+
 variable "number_of_k8s_masters_no_etcd" {
   default = 2
 }
@@ -40,6 +44,14 @@ variable "number_of_k8s_nodes_no_floating_ip" {
   default = 1
 }
 
+variable "number_of_k8s_nodes_ext_net" {
+  default = 0
+}
+
+variable "number_of_k8s_data_nodes_ext_net" {
+  default = 0
+}
+
 variable "number_of_gfs_nodes_no_floating_ip" {
   default = 0
 }
@@ -88,6 +100,11 @@ variable "flavor_k8s_node" {
   default     = 3
 }
 
+variable "flavor_k8s_data_node" {
+  description = "Use 'nova flavor-list' command to see what your OpenStack instance uses for IDs"
+  default     = 3
+}
+
 variable "flavor_etcd" {
   description = "Use 'nova flavor-list' command to see what your OpenStack instance uses for IDs"
   default     = 3
diff --git a/requirements.txt b/requirements.txt
index e36ab79d..0c41c3b6 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,5 +1,6 @@
-ansible>=2.5.0,!=2.7.0
-jinja2>=2.9.6
-netaddr
-pbr>=1.6
-hvac
+ansible==2.7.8
+jinja2==2.10.1
+netaddr==0.7.19
+pbr==5.1
+hvac==0.7.2
+ansible-modules-hashivault==3.16.0
